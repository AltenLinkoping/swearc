apply plugin: "google-test"

def prebuiltPath = "publish"

def libName(def binary, def name) {
    binary.targetPlatform.operatingSystem.windows ? "${name}.lib" : "lib${name}.a"
}

model {
    binaries {
        withType(TestSuiteBinarySpec) {
            lib project: ":utils:gtest", library: "gtest", linkage: "static"

            if (toolChain in Gcc) {
                linker.args "-pthread"
            }

            // TODO:DAZ buildable is not being set correctly on test suite binaries
            if (it.testedBinary.buildable) {
                println "Adding dependency on $it"
                // TODO: This should be it.tasks.run, which should use the install image of the test exe
                unitTest.dependsOn it.namingScheme.getTaskName("run")
            }
        }
    }

    repositories {
        libs(PrebuiltLibraries) {
            gtest {
                headers.srcDir "${prebuiltPath}/include"
                binaries.withType(StaticLibraryBinary) { binary->
                    staticLibraryFile = file("${prebuiltPath}/lib/${binary.targetPlatform.name}/${libName(binary, 'gtest')}")
                }
            }
        }
    }

    toolChains {
        visualCpp(VisualCpp)
        mingw(Gcc) {
            path new File("C:/MinGW/bin")
            target("mingw")
        }
        cygwin(Gcc) {
            path new File("C:/cygwin/bin")
            target("cygwin")
        }
        gcc(Gcc)
        clang(Clang)
    }

    platforms {
        win {
            operatingSystem "windows"
            architecture "x86"
        }
        mingw {
            operatingSystem "windows"
            architecture "sparc"
        }
        cygwin {
            operatingSystem "windows"
            architecture "sparc"
        }
        osx {
            operatingSystem "osx"
            architecture "x86"
        }
        linux {
            operatingSystem "linux"
            architecture "x86"
        }
    }

    components {
        all {
            targetPlatform "win"
	    targetPlatform "mingw"
	    targetPlatform "cygwin"
	    targetPlatform "osx"
	    targetPlatform "linux"
        }
    }
}

task unitTest
