apply plugin: 'cpp'
apply from: 'platform-config.gradle'

def gtest_version = "gtest-1.7.0" // Base name of zip-file
def gmock_version = "googlemock-release-1.7.0" // Base name of zip-file

task extractGMock(type: Copy) {
    ext.headerDir = file("src/${gmock_version}/include")
    ext.sourceDir = file("src/${gmock_version}/")
    from { zipTree("${gmock_version}.zip") }
    into "src"
}

task extractGTest(type: Copy) {
    dependsOn extractGMock
    ext.headerDir = file("src/${gtest_version}/include")
    ext.sourceDir = file("src/${gtest_version}/")
    from { zipTree("${gtest_version}.zip") }
    into "src"
}

model {

    binaries {
        all {
            if (toolChain in Gcc) {
                cppCompiler.args "-fPIC"
            }

            if (it instanceof SharedLibraryBinarySpec) {
                cppCompiler.define "GTEST_CREATE_SHARED_LIBRARY", "1"
            }
        }
    }

    components {

        gtest(NativeLibrarySpec) {
            sources {
                cpp {
                    source {
		        srcDirs "src/${gtest_version}"
                        include 'src/gtest-all.cc'
                        generatedBy tasks.extractGTest
                    }
                    exportedHeaders {
		        srcDirs "src/${gtest_version}/include", "src/${gtest_version}"
		    }
                }
            }
        }

        gmock(NativeLibrarySpec) {
            sources {
                cpp {
                   lib library: "gtest"
                    source {
		        srcDirs "src/${gmock_version}"
                        include 'src/gmock-all.cc'
                        generatedBy tasks.extractGMock
                    }
                    exportedHeaders {
		        srcDirs "src/${gmock_version}/include", "src/${gmock_version}"
		    }
                }
            }
        }

    }

    tasks {

        clean {
           delete += "src"
	   delete += "publish"
        }

    }

}
